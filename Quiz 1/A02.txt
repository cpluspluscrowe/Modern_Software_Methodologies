Chapter 11 – Reliability Engineering
1
Chapter	11	Reliability	Engineering
30/10/2014
Topics covered
² Availability and reliability
² Reliability requirements
² Fault-tolerant architectures
² Programming for reliability
² Reliability measurement
2
Chapter	11	Reliability	Engineering
30/10/2014
Software reliability
² Dependable software is expected
² However, some system failures are accepted.
² Software systems have high reliability requirements
§ E.g., critical software systems
² Software engineering techniques for reliability 
requirements.
§ E.g., medical systems and aerospace systems
3
Chapter	11	Reliability	Engineering
30/10/2014
Faults, errors and failures
Term Description
Human error or
mistake
Human behavior that results in the introduction of faults into a system. For 
example, in the wilderness weather system, a programmer might decide that the 
way to compute the time for the next transmission is to add 1 hour to the current 
time. This works except when the transmission time is between 23.00 and 
midnight (midnight is 00.00 in the 24-hour clock).
System fault
A characteristic of a software system that can lead to a system error. The fault is 
the inclusion of the code to add 1 hour to the time of the last transmission, 
without a check if the time is greater than or equal to 23.00.
System error
An erroneous system state that can lead to system behavior that is unexpected 
by system users. The value of transmission time is set incorrectly (to 24.XX 
rather than 00.XX) when the faulty code is executed.
System failure
An event that occurs at some point in time when the system does not deliver a 
service as expected by its users. No weather data is transmitted because the 
time is invalid.
4
Chapter	11	Reliability	Engineering
30/10/2014
Faults and failures
² Failures 
§ Results of system errors resulted from faults in the system
² However, faults do not necessarily result in system 
errors
§ Transient and ‘corrected’ before an error arises.
§ Never be executed.
² Errors do not necessarily lead to system failures
§ Corrected by detection and recovery
§ Protected by protection facilities.
5
Chapter	11	Reliability	Engineering
30/10/2014
Fault management
² Fault avoidance
§ Avoid human errors to minimize system faults.
§ Organize development processes to detect and repair faults.
² Fault detection
§ Verification and validation techniques to remove faults.
² Fault tolerance
§ Design systems that faults do not cause failures.
6
Chapter	11	Reliability	Engineering
30/10/2014
Reliability achievement
² Fault avoidance
§ Development technique to minimise the possibility of mistakes or 
reveal mistakes.
² Fault detection and removal
§ Verification and validation techniques to increase the probability 
of correcting errors.
² Fault tolerance
§ Run-time techniques to ensure that faults do not cause errors.
7
Chapter	11	Reliability	Engineering
30/10/2014
The increasing costs of residual fault removal 
8
Cost per error detected
Few
Number of residual errors
Many Very few
Chapter	11	Reliability	Engineering
30/10/2014
Availability and reliability
9
Chapter	11	Reliability	Engineering
30/10/2014
Availability and reliability
² Reliability
§ The probability of failure-free system operation.
² Availability
§ The probability that a system conducts requested services at a 
point in time.
§ E.g., availability of 0.99.
10
Chapter	11	Reliability	Engineering
30/10/2014
Reliability and specifications
² Reliability 
§ Defined formally w.r.t. a system specification
§ A deviation from a specification.
² Incomplete or incorrect specifications
§ A system following specifications may ‘fail’.
² Unfamiliar with specifications 
§ Unaware how the system is supposed to behave.
² Perceptions of reliability
11
Chapter	11	Reliability	Engineering
30/10/2014
Perceptions of reliability
² Not always reflect the user’s reliability perception
§ The assumptions about environments for a system are incorrect
• Different usage of a system between in an office environment and in 
a university environment.
§ The consequences of system failures affects the perception of 
reliability.
12
Chapter	11	Reliability	Engineering
30/10/2014
A system as an input/output mapping
Ie
Input set
Oe
Output set
Program
Inputs causing
erroneous outputs
Erroneous
outputs
13
Chapter	11	Reliability	Engineering
30/10/2014
Availability perception
² Expressed as a percentage of the time
§ Available to conduct services.
² Two factors not considered:
§ The number of users affected by unavailable systems. 
§ The length of system failed or unavailable period. 
14
Chapter	11	Reliability	Engineering
30/10/2014
Software usage patterns
Possible
inputs
User
1
User
3
User
2
Erroneous
inputs
15
Chapter	11	Reliability	Engineering
30/10/2014
Reliability in use
² Reliability not improved by X% by removing faults with 
X%
² Program defects rarely executed
§ Not encountered by users. 
§ Not affect the perceived reliability.
² Users' operation patterns to avoid system features.
² Software systems with known faults
§ Considered reliable systems by users.
16
Chapter	11	Reliability	Engineering
30/10/2014
Reliability requirements
Chapter	11	Reliability	Engineering 17
30/10/2014
System reliability requirements
² Functional reliability requirements 
§ Define system and software functions 
§ Avoid, detect or tolerate faults 
§ Not lead to system failure.
² Software reliability requirements 
§ Cope with hardware failure or operator error.
² Non-functional reliability requirements
² A measurable system attribute specified quantitatively. 
² E.g., the number of failures and the available time. 
18
Chapter	11	Reliability	Engineering
30/10/2014
Reliability metrics
² Units of measurement of system reliability.
² Counting the number of operational failures and the 
period length that the system has been operational.
² Assess the reliability (e.g., critical systems)
§ Long-term measurement techniques
² Metrics
§ Probability of failure on demand
§ Rate of occurrence of failures
19
Chapter	11	Reliability	Engineering
30/10/2014
Probability of failure on demand (POFOD)
² The probability of the system failure when a service 
request is made. 
§ Useful when demands for service are relatively infrequent.
² Implement appropriate protection systems
§ Demand services occasionally.
§ Serious consequence due to failed services.
² Develop for safety-critical systems
§ E.g., emergency shutdown system in a chemical plant.
20
Chapter	11	Reliability	Engineering
30/10/2014
Rate of fault occurrence (ROCOF)
² System failure occurrence rate
² ROCOF of 0.002 
§ 2 failures are likely in each 1000 operational time units
² Reliable systems needed
§ Systems perform a number of similar requests in a short time
§ E.g., credit card processing system.
² Reciprocal of ROCOF is Mean time to Failure (MTTF)
§ Systems with long transactions
§ System processing takes a long time. MTTF should be longer than 
expected transaction length.
21
Chapter	11	Reliability	Engineering
30/10/2014
Availability
² The time that a software system is available
§ Repair and restart time considered
² Availability of 0.998 
§ Software is available for 998 out of 1000 time units.
² Continuously running systems 
§ E.g., railway signalling systems.
22
Chapter	11	Reliability	Engineering
30/10/2014
Availability specification
Availability Explanation
0.9 The system is available for 90% of the time. This means that, in a
24-hour period (1,440 minutes), the system will be unavailable for
144 minutes. (1440 * 10%) 
0.99 In a 24-hour period, the system is unavailable for 14.4 minutes.
0.999 The system is unavailable for 84 seconds in a 24-hour period.
0.9999 The system is unavailable for 8.4 seconds in a 24-hour period.
Roughly, one minute per week.
23
Chapter	11	Reliability	Engineering
30/10/2014
Non-functional reliability requirements
² Non-functional reliability requirements
§ Reliability specifications using one of the reliability metrics 
§ POFOD: probability of fault on demand
§ ROCOF: rate of occurrence of Fault
§ AVAIL: availability
² Used for many years in safety-critical systems 
§ Uncommon for business critical systems. 
² Need precise measurement about reliability and 
availability expectations.
Chapter	11	Reliability	Engineering 24
30/10/2014
Benefits of reliability specification
² Help to clarify stakeholders' needs.
² Provide a measurement basis for system tests.
² Improve the reliability by different design strategies. 
² Evidence of including required reliability 
implementations.
Chapter	11	Reliability	Engineering 25
30/10/2014
Specifying reliability requirements
² Availability and reliability requirements for different types 
of failure. 
§ Low probability of high-cost failures
² Availability and reliability requirements for different types 
of system service. 
§ Tolerate failures in less critical services. 
² A high level of reliability required. 
§ Other mechanisms for reliable system services.
Chapter	11	Reliability	Engineering 26
30/10/2014
ATM reliability specification
² Key concerns
§ ATMs conduct services as requested 
§ Record customer transactions
§ ATM systems are available when required.
² Database transaction mechanisms make a correction of 
transaction problems 
Chapter	11	Reliability	Engineering 27
30/10/2014
ATM availability specification
² System services
§ The customer account database service;
§ ‘withdraw cash’, ‘provide account information’, etc.
² Specify a high level of availability in database service.
§ Database availability: 0.9999, between 7 am and 11pm. 
§ A downtime of less than 1 minute per week.
Chapter	11	Reliability	Engineering 28
30/10/2014
ATM availability specification
² Key reliability issues depends on mechanical reliability. 
² A lower level of software availability is acceptable. 
² The overall availability
§ Specify availability with 0.999
§ A machine might be unavailable for between 1 and 2 minutes 
each day. 
Chapter	11	Reliability	Engineering 29
30/10/2014
Insulin pump reliability specification
² Probability of failure (POFOD) metric.
² Transient failures 
§ Repaired by user actions, such as, recalibration of the machine. 
§ Low POFOD is acceptable. A failure occurs in every 500 
demands.
² Permanent failures
§ Re-installed by the manufacturer. 
§ Occur no more than once per year. 
§ POFOD < 0.00002.
30
Chapter	11	Reliability	Engineering
30/10/2014
Functional reliability requirements
² Checking requirements
§ Identify incorrect data before it leads to a failure.
² Recovery requirements 
§ Help the system recover from a failure.
² Redundancy requirements 
§ Specify redundant system features.
² Process requirements 
§ Specify software development processes.
31
Chapter	11	Reliability	Engineering
30/10/2014
Examples of functional reliability requirements
RR1: A pre-defined range for all operator inputs shall be defined and 
the system shall check that all operator inputs fall within this pre-defined 
range. (Checking)
RR2: Copies of the patient database shall be maintained on two 
separate servers that are not housed in the same building. (Recovery, 
redundancy)
RR3: N-version programming shall be used to implement the braking 
control system. (Redundancy)
RR4: The system must be implemented in a safe subset of Ada and 
checked using static analysis. (Process)
32
Chapter	11	Reliability	Engineering
30/10/2014
Fault-tolerant architectures
Chapter	11	Reliability	Engineering 33
30/10/2014
Fault tolerance
² Fault tolerant in critical situations.
² Fault tolerance required 
§ High availability requirements 
§ Failure costs are very high.
² Fault tolerance
§ Able to continue in operation despite software failures.
² Fault tolerant required against incorrect validation or 
specification errors, although a system is proved to 
conform to its specification
Chapter	11	Reliability	Engineering 34
30/10/2014
Fault-tolerant system architectures
² Fault-tolerant systems architectures
§ Fault tolerance is essential based on redundancy and diversity.
² Examples of situations for dependable architectures:
§ Flight control systems for safety of passengers
§ Reactor systems for a chemical or nuclear emergency
§ Telecommunication systems for 24/7 availability.
Chapter	11	Reliability	Engineering 35
30/10/2014
Protection systems
² A specialized system 
§ Associated with other control system.
§ Take emergency action to deal with failures.
§ E.g., System to stop a train or system to shut down a reactor
² Monitor the controlled system and the environment.
² Take emergency action to shut down the system and 
avoid a catastrophe.
Chapter	11	Reliability	Engineering 36
30/10/2014
Protection system architecture
Chapter	11	Reliability	Engineering 37
Protection
sensors
System environment
Actuators
Controlled
equipment
Control system
Protection
system
Sensors
30/10/2014
Protection system functionality
² Protection systems for redundancy 
§ Control capabilities to replicate in the control software.
² Diverse protection systems
§ Different technology used in the control software.
² Need to expend in validation and dependability 
assurance.
² A low probability of failure for the protection system.
Chapter	11	Reliability	Engineering 38
30/10/2014
Self-monitoring architectures
² Multi-channel architectures 
§ System monitoring its own operations
§ Take action if inconsistencies are discovered
² The same computation is carried out on each channel 
§ Compare the results
§ Producing identical results assumes correct system operation
§ A failure exception is reported when different results arise.
Chapter	11	Reliability	Engineering 39
30/10/2014
Self-monitoring architecture
Chapter	11	Reliability	Engineering 40
Splitter
Channel 1
Channel 2
Comparator
Input value
Output value
Status
30/10/2014
The	first	
half	of	the	
chapter
